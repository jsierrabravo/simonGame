
// First, I create an array that contains the number of colours. This will be
// useful later
var buttonColours = ["red", "blue", "green", "yellow"];

var gamePattern = []; // This variable will contain the random pattern generated by de game
var userClickedPattern = []; // This variable will contain the pattern of selected button by the user

var started = false; // Some functions change if the game has started
var level = 0; // The number of the level will set the length of the pattern

// This listener will start the game
$(document).on("keypress", function() {
  if (!started) {
    nextSequence();
    started = true;
  }
})

// This listener will animate the pressed buttons by the user and play sound,
// then it verifies if the pressed button corresponds to the pattern
$(".btn").click(function() {

  // The id of each button is the corresponding color
  var userChosenColour = $(this).attr("id");

  // Add the pressed button to the user sequence
  if (started) {
    userClickedPattern.push(userChosenColour);
  }

  playSound(userChosenColour);
  animatePress(userChosenColour);

  checkAnswer(level);

});

// This function generates a new position in the gamePattern by randomly select
// a number between 0-4 and finding the correspond colour in buttonColours
function nextSequence() {

  var randomNumber = Math.floor(Math.random() * 4);
  var randomChosenColour = buttonColours[randomNumber];
  gamePattern.push(randomChosenColour);

  // The h1 is updated to say the current level
  level += 1;
  $("h1").text("Level " + level);

  // What I'm trying to do here is to show the pattern to the user. I created
  // this for loop to show each colour in the pattern one by one. But the problem
  // here is that all colours in the pattern are shown at the same time
  for (var j=0; j<level; j++) {

    doSetTimeout(j, gamePattern);

  }

}

// This is the function that doesn't work ----------------------------
// I think the trouble is the delay function I'm using: setTimeout
// Maybe the for loop above is running this function as many times as there are
// colours in gamePattern but it doesn't wait to finish the last timeOut, and
// all setTimeOuts are running at the same time. I hope I was clear, I'm not a
// native english speaker. Sorry if I wasn't
function doSetTimeout(j, gamePattern) {

  setTimeout(function() {
    // This is the animation of the buttons in the game pattern
    $("#" + gamePattern[j]).fadeOut(100).fadeIn(100);
    playSound(gamePattern[j]);

  }, 1000);

}

// This function only plays sound depending on the button pressed
function playSound(name) {
  var sound = new Audio("sounds/" + name + ".mp3");
  sound.play();
}

// This is the animation when the user press a button
function animatePress(currentColour) {
  $("#" + currentColour).addClass("pressed");
  setTimeout(function () {
    $("#" + currentColour).removeClass("pressed");
  }, 100);
}



function checkAnswer(currentLevel) {

  var igual = false;

  // This for loop verifies if the pattern introduced by the user is correct
  // after each selection
  for (var k=0; k<userClickedPattern.length; k++) {

    if (userClickedPattern[k]==gamePattern[k]) {
      igual = true;
    } else {
      igual = false;
      break;
    }

  }

  // If the user finished selecting the pattern:
  if (userClickedPattern.length==currentLevel && igual) {

    // If it's ok, generate a new position in the gamePattern
    setTimeout(function () {
      nextSequence();
      userClickedPattern = [];
    }, 1000);

  } else if (!igual && started) {
    // If it's not ok, game over
    $("body").addClass("game-over");
    setTimeout(function () {
      $("body").removeClass("game-over");
    }, 200);
    playSound("wrong");
    startOver();

    // console.log("wrong");
  }
}

// Restart all variables if game over occurs
function startOver() {
  $("h1").text("Game Over, Press Any Key to Restart");
  started = false;
  level = 0;
  gamePattern = [];
  userClickedPattern = [];
}
